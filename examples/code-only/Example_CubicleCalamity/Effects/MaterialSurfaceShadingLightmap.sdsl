shader MaterialSurfaceShadingLightmap<bool TIsEnergyConservative, float Intensity> : IMaterialSurfaceShading, Math
{
    compose ComputeColor LightMap;

    override float3 ComputeDirectLightContribution()
    {
        var diffuseColor = streams.matDiffuseVisible;
        if (TIsEnergyConservative)
        {
            // Approximation see: http://research.tri-ace.com/Data/course_note_practical_implementation_at_triace.pdf
            diffuseColor *= (1 - streams.matSpecularVisible);
        }
        return diffuseColor / PI * streams.lightColorNdotL * streams.matDiffuseSpecularAlphaBlend.x;
        // return diffuseColor * streams.lightColorNdotL;

    }

    override float3 ComputeEnvironmentLightContribution()
    {

        var diffuseColor = streams.matDiffuseVisible;
        float3 LM = LightMap.Compute().rgb;
        if (TIsEnergyConservative)
        {
            diffuseColor *= (1 - streams.matSpecularVisible);
        }


        return diffuseColor / PI * (LM * Intensity);
    }
};
